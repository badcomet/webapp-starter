version: "2"

options:
    # default: docker-compose.yml if you like, you can set a custom location (path) of your compose file like ~/app/compose.yml
    compose-file-path: 'docker-compose.yml'

    # optional, default: docker-compose-dev.yml if you like, you can set a custom location (path) of your compose file. Do not set it, if you do not want to use it at all
    # if its there, it gets used, if you name it explicitly, it HAS to exist
    compose-dev-file-path: 'docker-compose.dev.yml'

    # optional, activate this if you need to debug something, default is false
    # IMPORTANT: do not run stable with this, it creates a memory leak, turn off verbose when you are done testing
    verbose: true
syncs:
    # IMPORTANT: this name must be unique and should NOT match your real application container name!
    ${COMPOSE_PROJECT_NAME}-app-sync:
        # which folder to watch / sync from - you can use tilde (~), it will get expanded. Be aware that the trailing slash makes a difference
        # if you add them, only the inner parts of the folder gets synced, otherwise the parent folder will be synced as top-level folder
        src: './app/'

        # this does not user groupmap but rather configures the server to map
        # optional: usually if you map users you want to set the user id of your application container here
        sync_userid: '82'
        sync_groupid: '82'

        # defines how sync-conflicts should be handled. With default it will prefer the source with --copyonconflict
        # so on conflict, pick the one from the host and copy the conflicted file for backup
        sync_prefer: 'src'

        # optional, default can be either rsync or unison See Strategies in the wiki for explanation
        sync_strategy: 'native_osx'

        # optional: default is fswatch, if set to disable, no watcher will be used and you would need to start the sync manually
        watch_strategy: 'fswatch'

        # Exclude some files / directories that matches **exactly** the path
        # this currently use the the -Path option of unison, use sync_excludes_type to change this behavior
        # see http://www.cis.upenn.edu/~bcpierce/unison/download/releases/stable/unison-manual.html#pathspec for more
        sync_excludes: [ '.DS_Store' ]

        # use this to change the exclude syntax.
        # Path: you match the exact path ( nesting problem )
        # Name: If a file or a folder does match this string ( solves nesting problem )
        # Regex: Define a regular expression
        # none: You can define a type for each sync exclude, so sync_excludes: ['Name .git', 'Path Gemlock']
        #
        # for more see http://www.cis.upenn.edu/~bcpierce/unison/download/releases/stable/unison-manual.html#pathspec
        sync_excludes_type: 'Name'
